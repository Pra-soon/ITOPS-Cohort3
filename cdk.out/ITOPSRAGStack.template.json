{
 "Resources": {
  "AuthorizationUserPoolsmsRoleD2B0C01D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Condition": {
        "StringEquals": {
         "sts:ExternalId": "ITOPSRAGStackAuthorizationUserPool11E78ACB"
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "cognito-idp.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "sns:Publish",
         "Effect": "Allow",
         "Resource": "*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "sns-publish"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/Authorization/UserPool/smsRole/Resource"
   }
  },
  "AuthorizationUserPool114F25B4": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": true
    },
    "AutoVerifiedAttributes": [
     "email",
     "phone_number"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "EnabledMfas": [
     "SMS_MFA"
    ],
    "MfaConfiguration": "OPTIONAL",
    "Schema": [
     {
      "AttributeDataType": "String",
      "Mutable": true,
      "Name": "role",
      "StringAttributeConstraints": {
       "MaxLength": "30",
       "MinLength": "0"
      }
     }
    ],
    "SmsConfiguration": {
     "ExternalId": "ITOPSRAGStackAuthorizationUserPool11E78ACB",
     "SnsCallerArn": {
      "Fn::GetAtt": [
       "AuthorizationUserPoolsmsRoleD2B0C01D",
       "Arn"
      ]
     }
    },
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UserPoolAddOns": {
     "AdvancedSecurityMode": "ENFORCED"
    },
    "UsernameAttributes": [
     "email"
    ],
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/Authorization/UserPool/Resource"
   }
  },
  "AuthorizationCognitoDomain56EF13F0": {
   "Type": "AWS::Cognito::UserPoolDomain",
   "Properties": {
    "Domain": "itops-hhs-chatbot",
    "UserPoolId": {
     "Ref": "AuthorizationUserPool114F25B4"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/Authorization/CognitoDomain"
   }
  },
  "AuthorizationUserPoolClient8E2989BE": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit",
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "AuthorizationUserPool114F25B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/Authorization/UserPoolClient/Resource"
   }
  },
  "AuthorizationAuthorizationFunctionServiceRole09B7CF46": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/Authorization/AuthorizationFunction/ServiceRole/Resource"
   }
  },
  "AuthorizationAuthorizationFunctionB35B7A4C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "b098fc2ae50a09438eee446d595984f795dc8f1d4e4aafe229c95cf35504061c.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "AuthorizationUserPool114F25B4"
      },
      "APP_CLIENT_ID": {
       "Ref": "AuthorizationUserPoolClient8E2989BE"
      }
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "AuthorizationAuthorizationFunctionServiceRole09B7CF46",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 30
   },
   "DependsOn": [
    "AuthorizationAuthorizationFunctionServiceRole09B7CF46"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/Authorization/AuthorizationFunction/Resource",
    "aws:asset:path": "asset.b098fc2ae50a09438eee446d595984f795dc8f1d4e4aafe229c95cf35504061c",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotAPIChatHistoryTable86F70C1D": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "user_id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "session_id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "time_stamp",
      "AttributeType": "S"
     }
    ],
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "TimeIndex",
      "KeySchema": [
       {
        "AttributeName": "user_id",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "time_stamp",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      },
      "ProvisionedThroughput": {
       "ReadCapacityUnits": 5,
       "WriteCapacityUnits": 5
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "user_id",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "session_id",
      "KeyType": "RANGE"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/ChatHistoryTable/Resource"
   }
  },
  "ChatbotAPIUserFeedbackTableF734E54F": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "Topic",
      "AttributeType": "S"
     },
     {
      "AttributeName": "CreatedAt",
      "AttributeType": "S"
     },
     {
      "AttributeName": "Any",
      "AttributeType": "S"
     }
    ],
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "CreatedAtIndex",
      "KeySchema": [
       {
        "AttributeName": "CreatedAt",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      },
      "ProvisionedThroughput": {
       "ReadCapacityUnits": 5,
       "WriteCapacityUnits": 5
      }
     },
     {
      "IndexName": "AnyIndex",
      "KeySchema": [
       {
        "AttributeName": "Any",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "CreatedAt",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      },
      "ProvisionedThroughput": {
       "ReadCapacityUnits": 5,
       "WriteCapacityUnits": 5
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "Topic",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "CreatedAt",
      "KeyType": "RANGE"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/UserFeedbackTable/Resource"
   }
  },
  "ChatbotAPIEvaluationSummariesTableE9B95A54": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "PartitionKey",
      "AttributeType": "S"
     },
     {
      "AttributeName": "Timestamp",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "PartitionKey",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "Timestamp",
      "KeyType": "RANGE"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/EvaluationSummariesTable/Resource"
   }
  },
  "ChatbotAPIEvaluationResultsTableE72FCF7C": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "EvaluationId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "QuestionId",
      "AttributeType": "S"
     }
    ],
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "QuestionIndex",
      "KeySchema": [
       {
        "AttributeName": "EvaluationId",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "QuestionId",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      },
      "ProvisionedThroughput": {
       "ReadCapacityUnits": 5,
       "WriteCapacityUnits": 5
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "EvaluationId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "QuestionId",
      "KeyType": "RANGE"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/EvaluationResultsTable/Resource"
   }
  },
  "ChatbotAPIKendraSourceBucket8BA49C97": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
       ],
       "AllowedOrigins": [
        "*"
       ]
      }
     ]
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/KendraSourceBucket/Resource"
   }
  },
  "ChatbotAPIKendraSourceBucketPolicy7CAF16DA": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "ChatbotAPIKendraSourceBucket8BA49C97"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIKendraSourceBucket8BA49C97",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIKendraSourceBucket8BA49C97",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/KendraSourceBucket/Policy/Resource"
   }
  },
  "ChatbotAPIKendraSourceBucketAutoDeleteObjectsCustomResourceE4E84308": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "ChatbotAPIKendraSourceBucket8BA49C97"
    }
   },
   "DependsOn": [
    "ChatbotAPIKendraSourceBucketPolicy7CAF16DA"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/KendraSourceBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "ChatbotAPIFeedbackDownloadBucket5357D600": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
       ],
       "AllowedOrigins": [
        "*"
       ]
      }
     ]
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/FeedbackDownloadBucket/Resource"
   }
  },
  "ChatbotAPIFeedbackDownloadBucketPolicyC6BD7A68": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "ChatbotAPIFeedbackDownloadBucket5357D600"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIFeedbackDownloadBucket5357D600",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIFeedbackDownloadBucket5357D600",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/FeedbackDownloadBucket/Policy/Resource"
   }
  },
  "ChatbotAPIFeedbackDownloadBucketAutoDeleteObjectsCustomResourceF94AF4F5": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "ChatbotAPIFeedbackDownloadBucket5357D600"
    }
   },
   "DependsOn": [
    "ChatbotAPIFeedbackDownloadBucketPolicyC6BD7A68"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/FeedbackDownloadBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "ChatbotAPIEvalResultsBucketCB2F9C6D": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
       ],
       "AllowedOrigins": [
        "*"
       ]
      }
     ]
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/EvalResultsBucket/Resource"
   }
  },
  "ChatbotAPIEvalResultsBucketPolicy3C2312C6": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "ChatbotAPIEvalResultsBucketCB2F9C6D"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIEvalResultsBucketCB2F9C6D",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIEvalResultsBucketCB2F9C6D",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/EvalResultsBucket/Policy/Resource"
   }
  },
  "ChatbotAPIEvalResultsBucketAutoDeleteObjectsCustomResource4797A2B4": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "ChatbotAPIEvalResultsBucketCB2F9C6D"
    }
   },
   "DependsOn": [
    "ChatbotAPIEvalResultsBucketPolicy3C2312C6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/EvalResultsBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "ChatbotAPIEvalTestCasesBucket3A06FDF6": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
       ],
       "AllowedOrigins": [
        "*"
       ]
      }
     ]
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/EvalTestCasesBucket/Resource"
   }
  },
  "ChatbotAPIEvalTestCasesBucketPolicy96432181": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "ChatbotAPIEvalTestCasesBucket3A06FDF6"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIEvalTestCasesBucket3A06FDF6",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIEvalTestCasesBucket3A06FDF6",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/EvalTestCasesBucket/Policy/Resource"
   }
  },
  "ChatbotAPIEvalTestCasesBucketAutoDeleteObjectsCustomResourceB58F8FD0": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "ChatbotAPIEvalTestCasesBucket3A06FDF6"
    }
   },
   "DependsOn": [
    "ChatbotAPIEvalTestCasesBucketPolicy96432181"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/EvalTestCasesBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "ChatbotAPIRagasDependenciesBucket256E99F1": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
       ],
       "AllowedOrigins": [
        "*"
       ]
      }
     ]
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RagasDependenciesBucket/Resource"
   }
  },
  "ChatbotAPIRagasDependenciesBucketPolicy8B0BE295": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "ChatbotAPIRagasDependenciesBucket256E99F1"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIRagasDependenciesBucket256E99F1",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIRagasDependenciesBucket256E99F1",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RagasDependenciesBucket/Policy/Resource"
   }
  },
  "ChatbotAPIRagasDependenciesBucketAutoDeleteObjectsCustomResourceBF1D698E": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "ChatbotAPIRagasDependenciesBucket256E99F1"
    }
   },
   "DependsOn": [
    "ChatbotAPIRagasDependenciesBucketPolicy8B0BE295"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RagasDependenciesBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "ChatbotAPIKendraIndexRole0A5CCA00": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "kendra.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/KendraIndexRole/Resource"
   }
  },
  "ChatbotAPIKendraIndexRoleDefaultPolicyC7F225D1": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "ChatbotAPIKendraSourceBucket8BA49C97"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "ChatbotAPIKendraSourceBucket8BA49C97"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": "cloudwatch:PutMetricData",
       "Condition": {
        "StringEquals": {
         "cloudwatch:namespace": "AWS/Kendra"
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "logs:DescribeLogGroups",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "logs:CreateLogGroup",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:logs:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":log-group:/aws/kendra/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:DescribeLogStreams",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:logs:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":log-group:/aws/kendra/*:log-stream:*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIKendraIndexRoleDefaultPolicyC7F225D1",
    "Roles": [
     {
      "Ref": "ChatbotAPIKendraIndexRole0A5CCA00"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/KendraIndexRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIKendraIndex3CD60B23": {
   "Type": "AWS::Kendra::Index",
   "Properties": {
    "Description": "Gen AI Chatbot Kendra Index",
    "Edition": "DEVELOPER_EDITION",
    "Name": "itops-kendra-index",
    "RoleArn": {
     "Fn::GetAtt": [
      "ChatbotAPIKendraIndexRole0A5CCA00",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/KendraIndex"
   }
  },
  "ChatbotAPIKendraDataSourceRole1E561811": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "kendra.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/KendraDataSourceRole/Resource"
   }
  },
  "ChatbotAPIKendraDataSourceRoleDefaultPolicy7AE4B1A6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "ChatbotAPIKendraSourceBucket8BA49C97"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "ChatbotAPIKendraSourceBucket8BA49C97"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kendra:BatchDeleteDocument",
        "kendra:BatchPutDocument"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ChatbotAPIKendraIndex3CD60B23",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIKendraDataSourceRoleDefaultPolicy7AE4B1A6",
    "Roles": [
     {
      "Ref": "ChatbotAPIKendraDataSourceRole1E561811"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/KendraDataSourceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIKendraS3DataSourceA8A30815": {
   "Type": "AWS::Kendra::DataSource",
   "Properties": {
    "DataSourceConfiguration": {
     "S3Configuration": {
      "BucketName": {
       "Ref": "ChatbotAPIKendraSourceBucket8BA49C97"
      }
     }
    },
    "IndexId": {
     "Fn::GetAtt": [
      "ChatbotAPIKendraIndex3CD60B23",
      "Id"
     ]
    },
    "Name": "s3-source",
    "RoleArn": {
     "Fn::GetAtt": [
      "ChatbotAPIKendraDataSourceRole1E561811",
      "Arn"
     ]
    },
    "Type": "S3"
   },
   "DependsOn": [
    "ChatbotAPIKendraIndex3CD60B23"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/KendraS3DataSource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPI6A6C7FF4": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "CorsConfiguration": {
     "AllowHeaders": [
      "*"
     ],
     "AllowMethods": [
      "GET",
      "HEAD",
      "OPTIONS",
      "POST",
      "DELETE"
     ],
     "AllowOrigins": [
      "*"
     ],
     "MaxAge": 864000
    },
    "Name": "HTTP-API",
    "ProtocolType": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIDefaultStage9780EBB8": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AutoDeploy": true,
    "StageName": "$default"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/DefaultStage/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIGETusersessionSessionAPIIntegration903EFC6A": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ChatbotAPISessionHandlerFunctionF969576A",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/GET--user-session/SessionAPIIntegration/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIGETusersessionSessionAPIIntegrationPermission2A4896B9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPISessionHandlerFunctionF969576A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/user-session"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/GET--user-session/SessionAPIIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIGETusersession89A9EE88": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "GET /user-session",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIGETusersessionSessionAPIIntegration903EFC6A"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/GET--user-session/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4": {
   "Type": "AWS::ApiGatewayV2::Authorizer",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizerType": "JWT",
    "IdentitySource": [
     "$request.header.Authorization"
    ],
    "JwtConfiguration": {
     "Audience": [
      {
       "Ref": "AuthorizationUserPoolClient8E2989BE"
      }
     ],
     "Issuer": {
      "Fn::GetAtt": [
       "AuthorizationUserPool114F25B4",
       "ProviderURL"
      ]
     }
    },
    "Name": "HTTPAuthorizer"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/HTTPAuthorizer/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTusersessionSessionAPIIntegrationPermission932D0FC8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPISessionHandlerFunctionF969576A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/user-session"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--user-session/SessionAPIIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTusersessionDED62D1B": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "POST /user-session",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIGETusersessionSessionAPIIntegration903EFC6A"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--user-session/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIDELETEusersessionSessionAPIIntegrationPermissionD479EFB0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPISessionHandlerFunctionF969576A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/user-session"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/DELETE--user-session/SessionAPIIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIDELETEusersession9C8A3724": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "DELETE /user-session",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIGETusersessionSessionAPIIntegration903EFC6A"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/DELETE--user-session/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIGETchatbotuseKPIAPIIntegration51194AD3": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ChatbotAPIKPIHandlerFunction377426B2",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/GET--chatbot-use/KPIAPIIntegration/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIGETchatbotuseKPIAPIIntegrationPermission6E8D0B63": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIKPIHandlerFunction377426B2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/chatbot-use"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/GET--chatbot-use/KPIAPIIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIGETchatbotuse010BE172": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "GET /chatbot-use",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIGETchatbotuseKPIAPIIntegration51194AD3"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/GET--chatbot-use/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTchatbotuseKPIAPIIntegrationPermissionD5B3645A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIKPIHandlerFunction377426B2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/chatbot-use"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--chatbot-use/KPIAPIIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTchatbotuse04710446": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "POST /chatbot-use",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIGETchatbotuseKPIAPIIntegration51194AD3"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--chatbot-use/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIDELETEchatbotuseKPIAPIIntegrationPermission9FE88A6C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIKPIHandlerFunction377426B2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/chatbot-use"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/DELETE--chatbot-use/KPIAPIIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIDELETEchatbotuse1C220836": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "DELETE /chatbot-use",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIGETchatbotuseKPIAPIIntegration51194AD3"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/DELETE--chatbot-use/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIGETuserfeedbackFeedbackAPIIntegration10D18D1C": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ChatbotAPIFeedbackHandlerFunction11250F31",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/GET--user-feedback/FeedbackAPIIntegration/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIGETuserfeedbackFeedbackAPIIntegrationPermission7212A0C0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIFeedbackHandlerFunction11250F31",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/user-feedback"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/GET--user-feedback/FeedbackAPIIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIGETuserfeedback217E4B62": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "GET /user-feedback",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIGETuserfeedbackFeedbackAPIIntegration10D18D1C"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/GET--user-feedback/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTuserfeedbackFeedbackAPIIntegrationPermission8B121827": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIFeedbackHandlerFunction11250F31",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/user-feedback"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--user-feedback/FeedbackAPIIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTuserfeedback346A2E14": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "POST /user-feedback",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIGETuserfeedbackFeedbackAPIIntegration10D18D1C"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--user-feedback/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIDELETEuserfeedbackFeedbackAPIIntegrationPermissionC80E77CB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIFeedbackHandlerFunction11250F31",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/user-feedback"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/DELETE--user-feedback/FeedbackAPIIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIDELETEuserfeedback8987C7EB": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "DELETE /user-feedback",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIGETuserfeedbackFeedbackAPIIntegration10D18D1C"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/DELETE--user-feedback/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTuserfeedbackdownloadfeedbackFeedbackDownloadAPIIntegrationDEBB68C3": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ChatbotAPIFeedbackHandlerFunction11250F31",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--user-feedback--download-feedback/FeedbackDownloadAPIIntegration/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTuserfeedbackdownloadfeedbackFeedbackDownloadAPIIntegrationPermissionD849BF69": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIFeedbackHandlerFunction11250F31",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/user-feedback/download-feedback"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--user-feedback--download-feedback/FeedbackDownloadAPIIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTuserfeedbackdownloadfeedbackCA74A429": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "POST /user-feedback/download-feedback",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIPOSTuserfeedbackdownloadfeedbackFeedbackDownloadAPIIntegrationDEBB68C3"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--user-feedback--download-feedback/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTs3knowledgebucketdataS3GetKnowledgeAPIIntegration59B60CEB": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ChatbotAPIGetS3KnowledgeFilesHandlerFunction70EEA016",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--s3-knowledge-bucket-data/S3GetKnowledgeAPIIntegration/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTs3knowledgebucketdataS3GetKnowledgeAPIIntegrationPermissionE44E77F5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIGetS3KnowledgeFilesHandlerFunction70EEA016",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/s3-knowledge-bucket-data"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--s3-knowledge-bucket-data/S3GetKnowledgeAPIIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTs3knowledgebucketdata8DBDF102": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "POST /s3-knowledge-bucket-data",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIPOSTs3knowledgebucketdataS3GetKnowledgeAPIIntegration59B60CEB"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--s3-knowledge-bucket-data/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTs3testcasesbucketdataS3GetTestCasesAPIIntegrationE4F10991": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ChatbotAPIGetS3TestCasesFilesHandlerFunctionDFEB7C32",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--s3-test-cases-bucket-data/S3GetTestCasesAPIIntegration/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTs3testcasesbucketdataS3GetTestCasesAPIIntegrationPermissionBB11E9FA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIGetS3TestCasesFilesHandlerFunctionDFEB7C32",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/s3-test-cases-bucket-data"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--s3-test-cases-bucket-data/S3GetTestCasesAPIIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTs3testcasesbucketdata80CAB7E2": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "POST /s3-test-cases-bucket-data",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIPOSTs3testcasesbucketdataS3GetTestCasesAPIIntegrationE4F10991"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--s3-test-cases-bucket-data/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTdeletes3fileS3DeleteAPIIntegration209DEDF2": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ChatbotAPIDeleteS3FilesHandlerFunctionAEF9C97C",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--delete-s3-file/S3DeleteAPIIntegration/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTdeletes3fileS3DeleteAPIIntegrationPermissionD19545C0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIDeleteS3FilesHandlerFunctionAEF9C97C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/delete-s3-file"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--delete-s3-file/S3DeleteAPIIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTdeletes3fileF8907447": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "POST /delete-s3-file",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIPOSTdeletes3fileS3DeleteAPIIntegration209DEDF2"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--delete-s3-file/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTsignedurlknowledgeS3UploadKnowledgeAPIIntegration3512608F": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ChatbotAPIUploadS3KnowledgeFilesHandlerFunction8F876BF4",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--signed-url-knowledge/S3UploadKnowledgeAPIIntegration/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTsignedurlknowledgeS3UploadKnowledgeAPIIntegrationPermissionEC75FC9A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIUploadS3KnowledgeFilesHandlerFunction8F876BF4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/signed-url-knowledge"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--signed-url-knowledge/S3UploadKnowledgeAPIIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTsignedurlknowledgeE9430E82": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "POST /signed-url-knowledge",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIPOSTsignedurlknowledgeS3UploadKnowledgeAPIIntegration3512608F"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--signed-url-knowledge/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIGETkendrasyncstillsyncingKendraSyncAPIIntegration2C362587": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ChatbotAPISyncKendraHandlerFunctionED8FB020",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/GET--kendra-sync--still-syncing/KendraSyncAPIIntegration/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIGETkendrasyncstillsyncingKendraSyncAPIIntegrationPermission7EA8FB35": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPISyncKendraHandlerFunctionED8FB020",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/kendra-sync/still-syncing"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/GET--kendra-sync--still-syncing/KendraSyncAPIIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIGETkendrasyncstillsyncing1BC668A3": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "GET /kendra-sync/still-syncing",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIGETkendrasyncstillsyncingKendraSyncAPIIntegration2C362587"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/GET--kendra-sync--still-syncing/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIGETkendrasyncsynckendraKendraSyncAPIIntegrationA62B334B": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ChatbotAPISyncKendraHandlerFunctionED8FB020",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/GET--kendra-sync--sync-kendra/KendraSyncAPIIntegration/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIGETkendrasyncsynckendraKendraSyncAPIIntegrationPermission4F24FBCE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPISyncKendraHandlerFunctionED8FB020",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/kendra-sync/sync-kendra"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/GET--kendra-sync--sync-kendra/KendraSyncAPIIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIGETkendrasyncsynckendraD1418083": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "GET /kendra-sync/sync-kendra",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIGETkendrasyncsynckendraKendraSyncAPIIntegrationA62B334B"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/GET--kendra-sync--sync-kendra/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIGETchatinvocationscountChatInvocationsCounterAPIIntegration6D25E435": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ChatbotAPIChatInvocationsCounterFunction0AD6F7D4",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/GET--chat-invocations-count/ChatInvocationsCounterAPIIntegration/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIGETchatinvocationscountChatInvocationsCounterAPIIntegrationPermissionA3E07D41": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIChatInvocationsCounterFunction0AD6F7D4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/chat-invocations-count"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/GET--chat-invocations-count/ChatInvocationsCounterAPIIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIGETchatinvocationscount26D2F272": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "GET /chat-invocations-count",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIGETchatinvocationscountChatInvocationsCounterAPIIntegration6D25E435"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/GET--chat-invocations-count/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTcomprehendmedicalredactComprehendMedicalAPIIntegrationCB6E2407": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ChatbotAPIcomprehendMedicalFunction7DBD41DD",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--comprehend-medical-redact/ComprehendMedicalAPIIntegration/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTcomprehendmedicalredactComprehendMedicalAPIIntegrationPermissionBBF141F0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIcomprehendMedicalFunction7DBD41DD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/comprehend-medical-redact"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--comprehend-medical-redact/ComprehendMedicalAPIIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTcomprehendmedicalredactBAAF72BC": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "POST /comprehend-medical-redact",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIPOSTcomprehendmedicalredactComprehendMedicalAPIIntegrationCB6E2407"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--comprehend-medical-redact/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTevalresultshandlerEvalResultsHandlerIntegration97501E53": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ChatbotAPIEvalResultsHandlerFunction3A0AF1AA",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--eval-results-handler/EvalResultsHandlerIntegration/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTevalresultshandlerEvalResultsHandlerIntegrationPermissionB4316263": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIEvalResultsHandlerFunction3A0AF1AA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/eval-results-handler"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--eval-results-handler/EvalResultsHandlerIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTevalresultshandler1101FB36": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "POST /eval-results-handler",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIPOSTevalresultshandlerEvalResultsHandlerIntegration97501E53"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--eval-results-handler/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTevalrunhandlerEvalRunHandlerIntegrationB6E3C345": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ChatbotAPIStepFunctionsStackStartLlmEvalStateMachineFunction8C08028E",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--eval-run-handler/EvalRunHandlerIntegration/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTevalrunhandlerEvalRunHandlerIntegrationPermissionFE1FC54A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIStepFunctionsStackStartLlmEvalStateMachineFunction8C08028E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/eval-run-handler"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--eval-run-handler/EvalRunHandlerIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTevalrunhandlerCCFCCBCA": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "POST /eval-run-handler",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIPOSTevalrunhandlerEvalRunHandlerIntegrationB6E3C345"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--eval-run-handler/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTsignedurltestcasesS3UploadTestCasesAPIIntegration4F16E821": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ChatbotAPIUploadS3TestCasesFilesHandlerFunctionFF824AEA",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--signed-url-test-cases/S3UploadTestCasesAPIIntegration/Resource"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTsignedurltestcasesS3UploadTestCasesAPIIntegrationPermission889EC75F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIUploadS3TestCasesFilesHandlerFunctionFF824AEA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
       },
       "/*/*/signed-url-test-cases"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--signed-url-test-cases/S3UploadTestCasesAPIIntegration-Permission"
   }
  },
  "ChatbotAPIRestBackendHTTPAPIPOSTsignedurltestcases884105E6": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
    },
    "AuthorizationType": "JWT",
    "AuthorizerId": {
     "Ref": "ChatbotAPIRestBackendHTTPAPIHTTPAuthorizerA78BC2D4"
    },
    "RouteKey": "POST /signed-url-test-cases",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIRestBackendHTTPAPIPOSTsignedurltestcasesS3UploadTestCasesAPIIntegration4F16E821"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/RestBackend/HTTP-API/POST--signed-url-test-cases/Resource"
   }
  },
  "ChatbotAPIWebsocketBackendWSAPI75718B83": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "Name": "WS-API",
    "ProtocolType": "WEBSOCKET",
    "RouteSelectionExpression": "$request.body.action"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/WebsocketBackend/WS-API/Resource"
   }
  },
  "ChatbotAPIWebsocketBackendWSAPIgetChatbotResponseRoutechatbotResponseIntegrationPermission834EB9FE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIChatHandlerFunctionEB04457E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
       },
       "/*getChatbotResponse"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/WebsocketBackend/WS-API/getChatbotResponse-Route/chatbotResponseIntegration-Permission"
   }
  },
  "ChatbotAPIWebsocketBackendWSAPIgetChatbotResponseRoutechatbotResponseIntegrationFC08302B": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":apigateway:",
       {
        "Ref": "AWS::Region"
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "ChatbotAPIChatHandlerFunctionEB04457E",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/WebsocketBackend/WS-API/getChatbotResponse-Route/chatbotResponseIntegration/Resource"
   }
  },
  "ChatbotAPIWebsocketBackendWSAPIgetChatbotResponseRoute6845E7AB": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "getChatbotResponse",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIWebsocketBackendWSAPIgetChatbotResponseRoutechatbotResponseIntegrationFC08302B"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/WebsocketBackend/WS-API/getChatbotResponse-Route/Resource"
   }
  },
  "ChatbotAPIWebsocketBackendWSAPIconnectRoutechatbotConnectionIntegrationPermissionDBFC3B32": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIChatHandlerFunctionEB04457E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
       },
       "/*$connect"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/WebsocketBackend/WS-API/$connect-Route/chatbotConnectionIntegration-Permission"
   }
  },
  "ChatbotAPIWebsocketBackendWSAPIconnectRoutechatbotConnectionIntegration0650E099": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":apigateway:",
       {
        "Ref": "AWS::Region"
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "ChatbotAPIChatHandlerFunctionEB04457E",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/WebsocketBackend/WS-API/$connect-Route/chatbotConnectionIntegration/Resource"
   }
  },
  "ChatbotAPIWebsocketBackendWSAPIconnectRoute09C2A76A": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "ChatbotAPIWebsocketBackendWSAPIWebSocketAuthorizer2C4C05F4"
    },
    "RouteKey": "$connect",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIWebsocketBackendWSAPIconnectRoutechatbotConnectionIntegration0650E099"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/WebsocketBackend/WS-API/$connect-Route/Resource"
   }
  },
  "ChatbotAPIWebsocketBackendWSAPIWebSocketAuthorizer2C4C05F4": {
   "Type": "AWS::ApiGatewayV2::Authorizer",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
    },
    "AuthorizerType": "REQUEST",
    "AuthorizerUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":apigateway:",
       {
        "Ref": "AWS::Region"
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "AuthorizationAuthorizationFunctionB35B7A4C",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    },
    "IdentitySource": [
     "route.request.querystring.Authorization"
    ],
    "Name": "WebSocketAuthorizer"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/WebsocketBackend/WS-API/WebSocketAuthorizer/Resource"
   }
  },
  "ChatbotAPIWebsocketBackendWSAPIITOPSRAGStackChatbotAPIWebsocketBackendWSAPIWebSocketAuthorizer11059A98PermissionC1DF0D7F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AuthorizationAuthorizationFunctionB35B7A4C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
       },
       "/authorizers/",
       {
        "Ref": "ChatbotAPIWebsocketBackendWSAPIWebSocketAuthorizer2C4C05F4"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/WebsocketBackend/WS-API/ITOPSRAGStackChatbotAPIWebsocketBackendWSAPIWebSocketAuthorizer11059A98-Permission"
   }
  },
  "ChatbotAPIWebsocketBackendWSAPIdefaultRoutechatbotConnectionIntegrationPermission7260E6BB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIChatHandlerFunctionEB04457E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
       },
       "/*$default"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/WebsocketBackend/WS-API/$default-Route/chatbotConnectionIntegration-Permission"
   }
  },
  "ChatbotAPIWebsocketBackendWSAPIdefaultRoutechatbotConnectionIntegrationA521DB43": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":apigateway:",
       {
        "Ref": "AWS::Region"
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "ChatbotAPIChatHandlerFunctionEB04457E",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/WebsocketBackend/WS-API/$default-Route/chatbotConnectionIntegration/Resource"
   }
  },
  "ChatbotAPIWebsocketBackendWSAPIdefaultRouteA292ACAE": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "$default",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIWebsocketBackendWSAPIdefaultRoutechatbotConnectionIntegrationA521DB43"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/WebsocketBackend/WS-API/$default-Route/Resource"
   }
  },
  "ChatbotAPIWebsocketBackendWSAPIdisconnectRoutechatbotDisconnectionIntegrationPermissionC12B4986": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIChatHandlerFunctionEB04457E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
       },
       "/*$disconnect"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/WebsocketBackend/WS-API/$disconnect-Route/chatbotDisconnectionIntegration-Permission"
   }
  },
  "ChatbotAPIWebsocketBackendWSAPIdisconnectRoutechatbotDisconnectionIntegrationA720B7D3": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":apigateway:",
       {
        "Ref": "AWS::Region"
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "ChatbotAPIChatHandlerFunctionEB04457E",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/WebsocketBackend/WS-API/$disconnect-Route/chatbotDisconnectionIntegration/Resource"
   }
  },
  "ChatbotAPIWebsocketBackendWSAPIdisconnectRoute06B8C9C1": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "$disconnect",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIWebsocketBackendWSAPIdisconnectRoutechatbotDisconnectionIntegrationA720B7D3"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/WebsocketBackend/WS-API/$disconnect-Route/Resource"
   }
  },
  "ChatbotAPIWebsocketBackendWSAPIgenerateEmailRouteemailIntegrationPermissionD00FFC77": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ChatbotAPIChatHandlerFunctionEB04457E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
       },
       "/*generateEmail"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/WebsocketBackend/WS-API/generateEmail-Route/emailIntegration-Permission"
   }
  },
  "ChatbotAPIWebsocketBackendWSAPIgenerateEmailRouteemailIntegration4C8E23CF": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":apigateway:",
       {
        "Ref": "AWS::Region"
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "ChatbotAPIChatHandlerFunctionEB04457E",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/WebsocketBackend/WS-API/generateEmail-Route/emailIntegration/Resource"
   }
  },
  "ChatbotAPIWebsocketBackendWSAPIgenerateEmailRouteD46A28B4": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "generateEmail",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotAPIWebsocketBackendWSAPIgenerateEmailRouteemailIntegration4C8E23CF"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/WebsocketBackend/WS-API/generateEmail-Route/Resource"
   }
  },
  "ChatbotAPIWebsocketBackendWSAPIprodD7F844E0": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
    },
    "AutoDeploy": true,
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/WebsocketBackend/WS-API-prod/Resource"
   }
  },
  "ChatbotAPISessionHandlerFunctionServiceRole9405D10E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/SessionHandlerFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPISessionHandlerFunctionServiceRoleDefaultPolicy1844E408": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:DeleteItem",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIChatHistoryTable86F70C1D",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIChatHistoryTable86F70C1D",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPISessionHandlerFunctionServiceRoleDefaultPolicy1844E408",
    "Roles": [
     {
      "Ref": "ChatbotAPISessionHandlerFunctionServiceRole9405D10E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/SessionHandlerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPISessionHandlerFunctionF969576A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "b7053a88deec7eefab99c4bfa11b87d6d6389f4505e91dc8701d0c0470cae7fa.zip"
    },
    "Environment": {
     "Variables": {
      "DDB_TABLE_NAME": {
       "Ref": "ChatbotAPIChatHistoryTable86F70C1D"
      }
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPISessionHandlerFunctionServiceRole9405D10E",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 30
   },
   "DependsOn": [
    "ChatbotAPISessionHandlerFunctionServiceRoleDefaultPolicy1844E408",
    "ChatbotAPISessionHandlerFunctionServiceRole9405D10E"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/SessionHandlerFunction/Resource",
    "aws:asset:path": "asset.b7053a88deec7eefab99c4bfa11b87d6d6389f4505e91dc8701d0c0470cae7fa",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotAPIKPIHandlerFunctionServiceRole0D707649": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/KPIHandlerFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPIKPIHandlerFunctionServiceRoleDefaultPolicy76F4C9F9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:DeleteItem",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:807596108910:table/itops-chatbot-logs",
        "arn:aws:dynamodb:us-east-1:807596108910:table/itops-chatbot-logs/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIKPIHandlerFunctionServiceRoleDefaultPolicy76F4C9F9",
    "Roles": [
     {
      "Ref": "ChatbotAPIKPIHandlerFunctionServiceRole0D707649"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/KPIHandlerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIKPIHandlerFunction377426B2": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "8adf272dfeecd076077b46c76fd10a6c3354ac1c5754e9ed89debdb2a08b9c2a.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPIKPIHandlerFunctionServiceRole0D707649",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 30
   },
   "DependsOn": [
    "ChatbotAPIKPIHandlerFunctionServiceRoleDefaultPolicy76F4C9F9",
    "ChatbotAPIKPIHandlerFunctionServiceRole0D707649"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/KPIHandlerFunction/Resource",
    "aws:asset:path": "asset.8adf272dfeecd076077b46c76fd10a6c3354ac1c5754e9ed89debdb2a08b9c2a",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotAPIChatHandlerFunctionServiceRoleF8F74DF8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/ChatHandlerFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPIChatHandlerFunctionServiceRoleDefaultPolicy1212B8E8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "bedrock:InvokeModel",
        "bedrock:InvokeModelWithResponseStream"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "kendra:Retrieve",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ChatbotAPIKendraIndex3CD60B23",
         "Arn"
        ]
       }
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ChatbotAPISessionHandlerFunctionF969576A",
         "Arn"
        ]
       }
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Resource": "arn:aws:iam::807596108910:role/ITOPSRAGStack-ChatbotAPIKendraIndexRole0A5CCA00-mOwqNPZz42yg/*"
      },
      {
       "Action": "execute-api:ManageConnections",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":execute-api:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":",
          {
           "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
          },
          "/*/*/@connections/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIChatHandlerFunctionServiceRoleDefaultPolicy1212B8E8",
    "Roles": [
     {
      "Ref": "ChatbotAPIChatHandlerFunctionServiceRoleF8F74DF8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/ChatHandlerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIChatHandlerFunctionEB04457E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e6e5cf448abb86b4ef82b4f6df849fa4285bed9480d85a310ce7dc161f48c78e.zip"
    },
    "Environment": {
     "Variables": {
      "mvp_websocket__api_endpoint_test": {
       "Fn::Join": [
        "",
        [
         "https://",
         {
          "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
         },
         ".execute-api.",
         {
          "Ref": "AWS::Region"
         },
         ".",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/prod"
        ]
       ]
      },
      "INDEX_ID": {
       "Fn::GetAtt": [
        "ChatbotAPIKendraIndex3CD60B23",
        "Id"
       ]
      },
      "SESSION_HANDLER": {
       "Ref": "ChatbotAPISessionHandlerFunctionF969576A"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPIChatHandlerFunctionServiceRoleF8F74DF8",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 300
   },
   "DependsOn": [
    "ChatbotAPIChatHandlerFunctionServiceRoleDefaultPolicy1212B8E8",
    "ChatbotAPIChatHandlerFunctionServiceRoleF8F74DF8"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/ChatHandlerFunction/Resource",
    "aws:asset:path": "asset.e6e5cf448abb86b4ef82b4f6df849fa4285bed9480d85a310ce7dc161f48c78e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotAPIFeedbackHandlerFunctionServiceRole4FD380A6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/FeedbackHandlerFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPIFeedbackHandlerFunctionServiceRoleDefaultPolicy8CD050DC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:DeleteItem",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIUserFeedbackTableF734E54F",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIUserFeedbackTableF734E54F",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIFeedbackDownloadBucket5357D600",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIFeedbackDownloadBucket5357D600",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIFeedbackHandlerFunctionServiceRoleDefaultPolicy8CD050DC",
    "Roles": [
     {
      "Ref": "ChatbotAPIFeedbackHandlerFunctionServiceRole4FD380A6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/FeedbackHandlerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIFeedbackHandlerFunction11250F31": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "8420b86623e3b17b2c56af3bcc7b353b0a04f7efa546754cabf3713c1940171c.zip"
    },
    "Environment": {
     "Variables": {
      "FEEDBACK_TABLE": {
       "Ref": "ChatbotAPIUserFeedbackTableF734E54F"
      },
      "FEEDBACK_S3_DOWNLOAD": {
       "Ref": "ChatbotAPIFeedbackDownloadBucket5357D600"
      }
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPIFeedbackHandlerFunctionServiceRole4FD380A6",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 30
   },
   "DependsOn": [
    "ChatbotAPIFeedbackHandlerFunctionServiceRoleDefaultPolicy8CD050DC",
    "ChatbotAPIFeedbackHandlerFunctionServiceRole4FD380A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/FeedbackHandlerFunction/Resource",
    "aws:asset:path": "asset.8420b86623e3b17b2c56af3bcc7b353b0a04f7efa546754cabf3713c1940171c",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotAPIDeleteS3FilesHandlerFunctionServiceRole162C8442": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/DeleteS3FilesHandlerFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPIDeleteS3FilesHandlerFunctionServiceRoleDefaultPolicy1AE35FEF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIKendraSourceBucket8BA49C97",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIKendraSourceBucket8BA49C97",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIDeleteS3FilesHandlerFunctionServiceRoleDefaultPolicy1AE35FEF",
    "Roles": [
     {
      "Ref": "ChatbotAPIDeleteS3FilesHandlerFunctionServiceRole162C8442"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/DeleteS3FilesHandlerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIDeleteS3FilesHandlerFunctionAEF9C97C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "482f1b73c8177dfba684cd2c0e0d0c3376fd06fbc38de7bdb682eab9decf3d15.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET": {
       "Ref": "ChatbotAPIKendraSourceBucket8BA49C97"
      }
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPIDeleteS3FilesHandlerFunctionServiceRole162C8442",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 30
   },
   "DependsOn": [
    "ChatbotAPIDeleteS3FilesHandlerFunctionServiceRoleDefaultPolicy1AE35FEF",
    "ChatbotAPIDeleteS3FilesHandlerFunctionServiceRole162C8442"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/DeleteS3FilesHandlerFunction/Resource",
    "aws:asset:path": "asset.482f1b73c8177dfba684cd2c0e0d0c3376fd06fbc38de7bdb682eab9decf3d15",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotAPIGetS3KnowledgeFilesHandlerFunctionServiceRole6258C17D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/GetS3KnowledgeFilesHandlerFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPIGetS3KnowledgeFilesHandlerFunctionServiceRoleDefaultPolicyAFAFB1C8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIKendraSourceBucket8BA49C97",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIKendraSourceBucket8BA49C97",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIGetS3KnowledgeFilesHandlerFunctionServiceRoleDefaultPolicyAFAFB1C8",
    "Roles": [
     {
      "Ref": "ChatbotAPIGetS3KnowledgeFilesHandlerFunctionServiceRole6258C17D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/GetS3KnowledgeFilesHandlerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIGetS3KnowledgeFilesHandlerFunction70EEA016": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7b3c73e885fe1f77f67b33ff1e93f36d1573dff08a32aa42aba5e35f2d30a0d8.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET": {
       "Ref": "ChatbotAPIKendraSourceBucket8BA49C97"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPIGetS3KnowledgeFilesHandlerFunctionServiceRole6258C17D",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 30
   },
   "DependsOn": [
    "ChatbotAPIGetS3KnowledgeFilesHandlerFunctionServiceRoleDefaultPolicyAFAFB1C8",
    "ChatbotAPIGetS3KnowledgeFilesHandlerFunctionServiceRole6258C17D"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/GetS3KnowledgeFilesHandlerFunction/Resource",
    "aws:asset:path": "asset.7b3c73e885fe1f77f67b33ff1e93f36d1573dff08a32aa42aba5e35f2d30a0d8",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotAPIGetS3TestCasesFilesHandlerFunctionServiceRole157AEFD4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/GetS3TestCasesFilesHandlerFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPIGetS3TestCasesFilesHandlerFunctionServiceRoleDefaultPolicy378930AA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIEvalTestCasesBucket3A06FDF6",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIEvalTestCasesBucket3A06FDF6",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIGetS3TestCasesFilesHandlerFunctionServiceRoleDefaultPolicy378930AA",
    "Roles": [
     {
      "Ref": "ChatbotAPIGetS3TestCasesFilesHandlerFunctionServiceRole157AEFD4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/GetS3TestCasesFilesHandlerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIGetS3TestCasesFilesHandlerFunctionDFEB7C32": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "07282dc99a61d50397139b2555585d56e87a3539b18aafa8847146b565288f12.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET": {
       "Ref": "ChatbotAPIEvalTestCasesBucket3A06FDF6"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPIGetS3TestCasesFilesHandlerFunctionServiceRole157AEFD4",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 30
   },
   "DependsOn": [
    "ChatbotAPIGetS3TestCasesFilesHandlerFunctionServiceRoleDefaultPolicy378930AA",
    "ChatbotAPIGetS3TestCasesFilesHandlerFunctionServiceRole157AEFD4"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/GetS3TestCasesFilesHandlerFunction/Resource",
    "aws:asset:path": "asset.07282dc99a61d50397139b2555585d56e87a3539b18aafa8847146b565288f12",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotAPISyncKendraHandlerFunctionServiceRole2EA9ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/SyncKendraHandlerFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPISyncKendraHandlerFunctionServiceRoleDefaultPolicy528BEDED": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "kendra:*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIKendraIndex3CD60B23",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ChatbotAPIKendraS3DataSourceA8A30815",
          "Arn"
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPISyncKendraHandlerFunctionServiceRoleDefaultPolicy528BEDED",
    "Roles": [
     {
      "Ref": "ChatbotAPISyncKendraHandlerFunctionServiceRole2EA9ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/SyncKendraHandlerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPISyncKendraHandlerFunctionED8FB020": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "062f7a44bb67c1b57e9daf895ad22849cec589ea4061988f85246ebfe6f5e5ef.zip"
    },
    "Environment": {
     "Variables": {
      "KENDRA": {
       "Fn::GetAtt": [
        "ChatbotAPIKendraIndex3CD60B23",
        "Id"
       ]
      },
      "SOURCE": {
       "Fn::GetAtt": [
        "ChatbotAPIKendraS3DataSourceA8A30815",
        "Id"
       ]
      }
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPISyncKendraHandlerFunctionServiceRole2EA9ECFB",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 30
   },
   "DependsOn": [
    "ChatbotAPISyncKendraHandlerFunctionServiceRoleDefaultPolicy528BEDED",
    "ChatbotAPISyncKendraHandlerFunctionServiceRole2EA9ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/SyncKendraHandlerFunction/Resource",
    "aws:asset:path": "asset.062f7a44bb67c1b57e9daf895ad22849cec589ea4061988f85246ebfe6f5e5ef",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotAPIUploadS3KnowledgeFilesHandlerFunctionServiceRoleFEF32DE4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/UploadS3KnowledgeFilesHandlerFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPIUploadS3KnowledgeFilesHandlerFunctionServiceRoleDefaultPolicy0240F8C0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIKendraSourceBucket8BA49C97",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIKendraSourceBucket8BA49C97",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIUploadS3KnowledgeFilesHandlerFunctionServiceRoleDefaultPolicy0240F8C0",
    "Roles": [
     {
      "Ref": "ChatbotAPIUploadS3KnowledgeFilesHandlerFunctionServiceRoleFEF32DE4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/UploadS3KnowledgeFilesHandlerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIUploadS3KnowledgeFilesHandlerFunction8F876BF4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3964989105dc6e7d78bf9b9eff9d39096bfa94b17792047a0d52da58618ac2cf.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET": {
       "Ref": "ChatbotAPIKendraSourceBucket8BA49C97"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPIUploadS3KnowledgeFilesHandlerFunctionServiceRoleFEF32DE4",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 30
   },
   "DependsOn": [
    "ChatbotAPIUploadS3KnowledgeFilesHandlerFunctionServiceRoleDefaultPolicy0240F8C0",
    "ChatbotAPIUploadS3KnowledgeFilesHandlerFunctionServiceRoleFEF32DE4"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/UploadS3KnowledgeFilesHandlerFunction/Resource",
    "aws:asset:path": "asset.3964989105dc6e7d78bf9b9eff9d39096bfa94b17792047a0d52da58618ac2cf",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotAPIUploadS3TestCasesFilesHandlerFunctionServiceRole9DE76BD4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/UploadS3TestCasesFilesHandlerFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPIUploadS3TestCasesFilesHandlerFunctionServiceRoleDefaultPolicyCE0D5DE8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIEvalTestCasesBucket3A06FDF6",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIEvalTestCasesBucket3A06FDF6",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIUploadS3TestCasesFilesHandlerFunctionServiceRoleDefaultPolicyCE0D5DE8",
    "Roles": [
     {
      "Ref": "ChatbotAPIUploadS3TestCasesFilesHandlerFunctionServiceRole9DE76BD4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/UploadS3TestCasesFilesHandlerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIUploadS3TestCasesFilesHandlerFunctionFF824AEA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "cfb09c4b530030660439821ff54a1f48c99291a9dfa2c46c773b25161cf0f7da.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET": {
       "Ref": "ChatbotAPIEvalTestCasesBucket3A06FDF6"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPIUploadS3TestCasesFilesHandlerFunctionServiceRole9DE76BD4",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 30
   },
   "DependsOn": [
    "ChatbotAPIUploadS3TestCasesFilesHandlerFunctionServiceRoleDefaultPolicyCE0D5DE8",
    "ChatbotAPIUploadS3TestCasesFilesHandlerFunctionServiceRole9DE76BD4"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/UploadS3TestCasesFilesHandlerFunction/Resource",
    "aws:asset:path": "asset.cfb09c4b530030660439821ff54a1f48c99291a9dfa2c46c773b25161cf0f7da",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotAPIEvalResultsHandlerFunctionServiceRole614B02E1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/EvalResultsHandlerFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPIEvalResultsHandlerFunctionServiceRoleDefaultPolicyBCE80E25": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:DeleteItem",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIEvaluationResultsTableE72FCF7C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ChatbotAPIEvaluationSummariesTableE9B95A54",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIEvaluationResultsTableE72FCF7C",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIEvaluationSummariesTableE9B95A54",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIEvaluationResultsTableE72FCF7C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ChatbotAPIEvaluationSummariesTableE9B95A54",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIEvaluationResultsTableE72FCF7C",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIEvalResultsHandlerFunctionServiceRoleDefaultPolicyBCE80E25",
    "Roles": [
     {
      "Ref": "ChatbotAPIEvalResultsHandlerFunctionServiceRole614B02E1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/EvalResultsHandlerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIEvalResultsHandlerFunction3A0AF1AA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "406bb2223c70b7b5886dc174007afcea47c1690140dfd07fb02e197300575d2c.zip"
    },
    "Environment": {
     "Variables": {
      "EVALUATION_RESULTS_TABLE": {
       "Ref": "ChatbotAPIEvaluationResultsTableE72FCF7C"
      },
      "EVALUATION_SUMMARIES_TABLE": {
       "Ref": "ChatbotAPIEvaluationSummariesTableE9B95A54"
      }
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPIEvalResultsHandlerFunctionServiceRole614B02E1",
      "Arn"
     ]
    },
    "Runtime": "python3.12"
   },
   "DependsOn": [
    "ChatbotAPIEvalResultsHandlerFunctionServiceRoleDefaultPolicyBCE80E25",
    "ChatbotAPIEvalResultsHandlerFunctionServiceRole614B02E1"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/EvalResultsHandlerFunction/Resource",
    "aws:asset:path": "asset.406bb2223c70b7b5886dc174007afcea47c1690140dfd07fb02e197300575d2c",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotAPIStepFunctionsStackSplitEvalTestCasesFunctionServiceRole4EC95522": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/SplitEvalTestCasesFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPIStepFunctionsStackSplitEvalTestCasesFunctionServiceRoleDefaultPolicy918B0C7F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket",
        "s3:PutObject"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIEvalTestCasesBucket3A06FDF6",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIEvalTestCasesBucket3A06FDF6",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIStepFunctionsStackSplitEvalTestCasesFunctionServiceRoleDefaultPolicy918B0C7F",
    "Roles": [
     {
      "Ref": "ChatbotAPIStepFunctionsStackSplitEvalTestCasesFunctionServiceRole4EC95522"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/SplitEvalTestCasesFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIStepFunctionsStackSplitEvalTestCasesFunction39919AE2": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "41932fc1744d02edb7ef1ef1e512e2582d2c9499f88f84d87aa4caccaa1a4b93.zip"
    },
    "Environment": {
     "Variables": {
      "TEST_CASES_BUCKET": {
       "Ref": "ChatbotAPIEvalTestCasesBucket3A06FDF6"
      }
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPIStepFunctionsStackSplitEvalTestCasesFunctionServiceRole4EC95522",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 30
   },
   "DependsOn": [
    "ChatbotAPIStepFunctionsStackSplitEvalTestCasesFunctionServiceRoleDefaultPolicy918B0C7F",
    "ChatbotAPIStepFunctionsStackSplitEvalTestCasesFunctionServiceRole4EC95522"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/SplitEvalTestCasesFunction/Resource",
    "aws:asset:path": "asset.41932fc1744d02edb7ef1ef1e512e2582d2c9499f88f84d87aa4caccaa1a4b93",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotAPIStepFunctionsStackLlmEvalResultsHandlerFunctionServiceRole1D8C1651": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/LlmEvalResultsHandlerFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPIStepFunctionsStackLlmEvalResultsHandlerFunctionServiceRoleDefaultPolicy9896FA4A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:DeleteItem",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIEvaluationResultsTableE72FCF7C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ChatbotAPIEvaluationSummariesTableE9B95A54",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIEvaluationResultsTableE72FCF7C",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIEvaluationSummariesTableE9B95A54",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject",
        "s3:PutObject"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIEvalTestCasesBucket3A06FDF6",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIEvalTestCasesBucket3A06FDF6",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIEvaluationResultsTableE72FCF7C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ChatbotAPIEvaluationSummariesTableE9B95A54",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIEvaluationResultsTableE72FCF7C",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIStepFunctionsStackLlmEvalResultsHandlerFunctionServiceRoleDefaultPolicy9896FA4A",
    "Roles": [
     {
      "Ref": "ChatbotAPIStepFunctionsStackLlmEvalResultsHandlerFunctionServiceRole1D8C1651"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/LlmEvalResultsHandlerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIStepFunctionsStackLlmEvalResultsHandlerFunction136BDFD9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "897fcf8c743811f1da9f94139c153c6e0b70f0e6b30dd11f74b65d59407a259f.zip"
    },
    "Environment": {
     "Variables": {
      "EVAL_SUMMARIES_TABLE": {
       "Ref": "ChatbotAPIEvaluationSummariesTableE9B95A54"
      },
      "EVAL_RESULTS_TABLE": {
       "Ref": "ChatbotAPIEvaluationResultsTableE72FCF7C"
      },
      "TEST_CASES_BUCKET": {
       "Ref": "ChatbotAPIEvalTestCasesBucket3A06FDF6"
      }
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPIStepFunctionsStackLlmEvalResultsHandlerFunctionServiceRole1D8C1651",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 30
   },
   "DependsOn": [
    "ChatbotAPIStepFunctionsStackLlmEvalResultsHandlerFunctionServiceRoleDefaultPolicy9896FA4A",
    "ChatbotAPIStepFunctionsStackLlmEvalResultsHandlerFunctionServiceRole1D8C1651"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/LlmEvalResultsHandlerFunction/Resource",
    "aws:asset:path": "asset.897fcf8c743811f1da9f94139c153c6e0b70f0e6b30dd11f74b65d59407a259f",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotAPIStepFunctionsStackGenerateResponseFunctionServiceRoleDB4F22D7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/GenerateResponseFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPIStepFunctionsStackGenerateResponseFunctionServiceRoleDefaultPolicyC1649F34": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "bedrock:InvokeModel",
        "bedrock:InvokeModelWithResponseStream"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "kendra:Retrieve",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ChatbotAPIKendraIndex3CD60B23",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIStepFunctionsStackGenerateResponseFunctionServiceRoleDefaultPolicyC1649F34",
    "Roles": [
     {
      "Ref": "ChatbotAPIStepFunctionsStackGenerateResponseFunctionServiceRoleDB4F22D7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/GenerateResponseFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIStepFunctionsStackGenerateResponseFunctionD9A0A53C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e0981895fcb1095eb639c7ca95221fc88a70893fcc8aa3d39f9cb7062f1414df.zip"
    },
    "Environment": {
     "Variables": {
      "PROMPT": "You are a helpful AI chatbot that will answer questions based on your knowledge. \n                You have access to a search tool that you will use to look up answers to questions.",
      "KB_ID": {
       "Fn::GetAtt": [
        "ChatbotAPIKendraIndex3CD60B23",
        "Id"
       ]
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPIStepFunctionsStackGenerateResponseFunctionServiceRoleDB4F22D7",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 30
   },
   "DependsOn": [
    "ChatbotAPIStepFunctionsStackGenerateResponseFunctionServiceRoleDefaultPolicyC1649F34",
    "ChatbotAPIStepFunctionsStackGenerateResponseFunctionServiceRoleDB4F22D7"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/GenerateResponseFunction/Resource",
    "aws:asset:path": "asset.e0981895fcb1095eb639c7ca95221fc88a70893fcc8aa3d39f9cb7062f1414df",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotAPIStepFunctionsStackLlmEvaluationFunctionServiceRole0CAEFAC6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/LlmEvaluationFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPIStepFunctionsStackLlmEvaluationFunctionServiceRoleDefaultPolicy7A2FE1EC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "bedrock:InvokeModel",
        "bedrock:InvokeModelWithResponseStream",
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetAuthorization",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:GetObject",
        "s3:PutObject"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIEvalTestCasesBucket3A06FDF6",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIEvalTestCasesBucket3A06FDF6",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIStepFunctionsStackGenerateResponseFunctionD9A0A53C",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIStepFunctionsStackGenerateResponseFunctionD9A0A53C",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIStepFunctionsStackLlmEvaluationFunctionServiceRoleDefaultPolicy7A2FE1EC",
    "Roles": [
     {
      "Ref": "ChatbotAPIStepFunctionsStackLlmEvaluationFunctionServiceRole0CAEFAC6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/LlmEvaluationFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIStepFunctionsStackLlmEvaluationFunction10EF6290": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:d241777a51ebed09594d0dd69bdf6c0bc985bda805f8e121aae5cf4a21ded1d5"
     }
    },
    "Environment": {
     "Variables": {
      "GENERATE_RESPONSE_LAMBDA_NAME": {
       "Ref": "ChatbotAPIStepFunctionsStackGenerateResponseFunctionD9A0A53C"
      },
      "BEDROCK_MODEL_ID": "anthropic.claude-3-haiku-20240307-v1:0",
      "TEST_CASES_BUCKET": {
       "Ref": "ChatbotAPIEvalTestCasesBucket3A06FDF6"
      }
     }
    },
    "MemorySize": 10240,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPIStepFunctionsStackLlmEvaluationFunctionServiceRole0CAEFAC6",
      "Arn"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "ChatbotAPIStepFunctionsStackLlmEvaluationFunctionServiceRoleDefaultPolicy7A2FE1EC",
    "ChatbotAPIStepFunctionsStackLlmEvaluationFunctionServiceRole0CAEFAC6"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/LlmEvaluationFunction/Resource",
    "aws:asset:path": "asset.d241777a51ebed09594d0dd69bdf6c0bc985bda805f8e121aae5cf4a21ded1d5",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "ChatbotAPIStepFunctionsStackAggregateEvalResultsFunctionServiceRole965AF17A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/AggregateEvalResultsFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPIStepFunctionsStackAggregateEvalResultsFunctionServiceRoleDefaultPolicy3122953F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:PutObject"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIEvalTestCasesBucket3A06FDF6",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIEvalTestCasesBucket3A06FDF6",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIStepFunctionsStackAggregateEvalResultsFunctionServiceRoleDefaultPolicy3122953F",
    "Roles": [
     {
      "Ref": "ChatbotAPIStepFunctionsStackAggregateEvalResultsFunctionServiceRole965AF17A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/AggregateEvalResultsFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIStepFunctionsStackAggregateEvalResultsFunction755BD2CE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "9ad773ac429b5719c95a9b7eeb64dd88ad645779c0b0e907e8e0eb3e73ddd1b1.zip"
    },
    "Environment": {
     "Variables": {
      "TEST_CASES_BUCKET": {
       "Ref": "ChatbotAPIEvalTestCasesBucket3A06FDF6"
      }
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPIStepFunctionsStackAggregateEvalResultsFunctionServiceRole965AF17A",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 30
   },
   "DependsOn": [
    "ChatbotAPIStepFunctionsStackAggregateEvalResultsFunctionServiceRoleDefaultPolicy3122953F",
    "ChatbotAPIStepFunctionsStackAggregateEvalResultsFunctionServiceRole965AF17A"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/AggregateEvalResultsFunction/Resource",
    "aws:asset:path": "asset.9ad773ac429b5719c95a9b7eeb64dd88ad645779c0b0e907e8e0eb3e73ddd1b1",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotAPIStepFunctionsStackLlmEvalCleanupFunctionServiceRole898CEA1E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/LlmEvalCleanupFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPIStepFunctionsStackLlmEvalCleanupFunctionServiceRoleDefaultPolicy247A7932": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject",
        "s3:DeleteObjects",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIEvalTestCasesBucket3A06FDF6",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIEvalTestCasesBucket3A06FDF6",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIStepFunctionsStackLlmEvalCleanupFunctionServiceRoleDefaultPolicy247A7932",
    "Roles": [
     {
      "Ref": "ChatbotAPIStepFunctionsStackLlmEvalCleanupFunctionServiceRole898CEA1E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/LlmEvalCleanupFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIStepFunctionsStackLlmEvalCleanupFunction3AF7E668": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "1c3b2cccd5903073987e5258fbd6464f1b3f2593f31191b1991901306d5c6693.zip"
    },
    "Environment": {
     "Variables": {
      "TEST_CASES_BUCKET": {
       "Ref": "ChatbotAPIEvalTestCasesBucket3A06FDF6"
      }
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPIStepFunctionsStackLlmEvalCleanupFunctionServiceRole898CEA1E",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 30
   },
   "DependsOn": [
    "ChatbotAPIStepFunctionsStackLlmEvalCleanupFunctionServiceRoleDefaultPolicy247A7932",
    "ChatbotAPIStepFunctionsStackLlmEvalCleanupFunctionServiceRole898CEA1E"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/LlmEvalCleanupFunction/Resource",
    "aws:asset:path": "asset.1c3b2cccd5903073987e5258fbd6464f1b3f2593f31191b1991901306d5c6693",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotAPIStepFunctionsStackEvaluationStateMachineRoleBB540967": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "states.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/EvaluationStateMachine/Role/Resource"
   }
  },
  "ChatbotAPIStepFunctionsStackEvaluationStateMachineRoleDefaultPolicy16C22430": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatbotAPIStepFunctionsStackAggregateEvalResultsFunction755BD2CE",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ChatbotAPIStepFunctionsStackLlmEvalCleanupFunction3AF7E668",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ChatbotAPIStepFunctionsStackLlmEvalResultsHandlerFunction136BDFD9",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ChatbotAPIStepFunctionsStackLlmEvaluationFunction10EF6290",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ChatbotAPIStepFunctionsStackSplitEvalTestCasesFunction39919AE2",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIStepFunctionsStackAggregateEvalResultsFunction755BD2CE",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIStepFunctionsStackLlmEvalCleanupFunction3AF7E668",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIStepFunctionsStackLlmEvalResultsHandlerFunction136BDFD9",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIStepFunctionsStackLlmEvaluationFunction10EF6290",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ChatbotAPIStepFunctionsStackSplitEvalTestCasesFunction39919AE2",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIStepFunctionsStackEvaluationStateMachineRoleDefaultPolicy16C22430",
    "Roles": [
     {
      "Ref": "ChatbotAPIStepFunctionsStackEvaluationStateMachineRoleBB540967"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/EvaluationStateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIStepFunctionsStackEvaluationStateMachineD8D0972D": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"Split Test Cases\",\"States\":{\"Split Test Cases\":{\"Next\":\"Process Test Cases\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "ChatbotAPIStepFunctionsStackSplitEvalTestCasesFunction39919AE2",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"Process Test Cases\":{\"Type\":\"Map\",\"ResultPath\":\"$.partial_result_keys\",\"Next\":\"Aggregate Results\",\"ItemsPath\":\"$.chunk_keys\",\"ItemSelector\":{\"chunk_key.$\":\"$$.Map.Item.Value.chunk_key\",\"evaluation_id.$\":\"$$.Map.Item.Value.evaluation_id\"},\"ItemProcessor\":{\"ProcessorConfig\":{\"Mode\":\"INLINE\"},\"StartAt\":\"Evaluate Test Cases\",\"States\":{\"Evaluate Test Cases\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "ChatbotAPIStepFunctionsStackLlmEvaluationFunction10EF6290",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}}},\"MaxConcurrency\":5},\"Aggregate Results\":{\"Next\":\"Save Evaluation Results\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "ChatbotAPIStepFunctionsStackAggregateEvalResultsFunction755BD2CE",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"partial_result_keys.$\":\"$.partial_result_keys\",\"evaluation_id.$\":\"$.evaluation_id\",\"evaluation_name.$\":\"$.evaluation_name\",\"test_cases_key.$\":\"$.test_cases_key\"}}},\"Save Evaluation Results\":{\"Next\":\"Cleanup Chunks\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "ChatbotAPIStepFunctionsStackLlmEvalResultsHandlerFunction136BDFD9",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"evaluation_id.$\":\"$.evaluation_id\",\"evaluation_name.$\":\"$.evaluation_name\",\"average_similarity.$\":\"$.average_similarity\",\"average_relevance.$\":\"$.average_relevance\",\"average_correctness.$\":\"$.average_correctness\",\"total_questions.$\":\"$.total_questions\",\"detailed_results_s3_key.$\":\"$.detailed_results_s3_key\",\"test_cases_key.$\":\"$.test_cases_key\"}}},\"Cleanup Chunks\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "ChatbotAPIStepFunctionsStackLlmEvalCleanupFunction3AF7E668",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"body.$\":\"$.body\"}}}},\"TimeoutSeconds\":3600}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "ChatbotAPIStepFunctionsStackEvaluationStateMachineRoleBB540967",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "ChatbotAPIStepFunctionsStackEvaluationStateMachineRoleDefaultPolicy16C22430",
    "ChatbotAPIStepFunctionsStackEvaluationStateMachineRoleBB540967"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/EvaluationStateMachine/Resource"
   }
  },
  "ChatbotAPIStepFunctionsStackStartLlmEvalStateMachineFunctionServiceRole5018C7CE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/StartLlmEvalStateMachineFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPIStepFunctionsStackStartLlmEvalStateMachineFunctionServiceRoleDefaultPolicy5899CB37": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "states:StartExecution",
       "Effect": "Allow",
       "Resource": {
        "Ref": "ChatbotAPIStepFunctionsStackEvaluationStateMachineD8D0972D"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIStepFunctionsStackStartLlmEvalStateMachineFunctionServiceRoleDefaultPolicy5899CB37",
    "Roles": [
     {
      "Ref": "ChatbotAPIStepFunctionsStackStartLlmEvalStateMachineFunctionServiceRole5018C7CE"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/StartLlmEvalStateMachineFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIStepFunctionsStackStartLlmEvalStateMachineFunction8C08028E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "28bd896e126f11ff70dc3df49e454eb33b350311d10b01f7ea82dec19c58bf98.zip"
    },
    "Environment": {
     "Variables": {
      "STATE_MACHINE_ARN": {
       "Ref": "ChatbotAPIStepFunctionsStackEvaluationStateMachineD8D0972D"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPIStepFunctionsStackStartLlmEvalStateMachineFunctionServiceRole5018C7CE",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 30
   },
   "DependsOn": [
    "ChatbotAPIStepFunctionsStackStartLlmEvalStateMachineFunctionServiceRoleDefaultPolicy5899CB37",
    "ChatbotAPIStepFunctionsStackStartLlmEvalStateMachineFunctionServiceRole5018C7CE"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/StepFunctionsStack/StartLlmEvalStateMachineFunction/Resource",
    "aws:asset:path": "asset.28bd896e126f11ff70dc3df49e454eb33b350311d10b01f7ea82dec19c58bf98",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotAPIChatInvocationsCounterFunctionServiceRoleBAAE7C12": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/ChatInvocationsCounterFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPIChatInvocationsCounterFunctionServiceRoleDefaultPolicy4112833F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "cloudwatch:GetMetricStatistics",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIChatInvocationsCounterFunctionServiceRoleDefaultPolicy4112833F",
    "Roles": [
     {
      "Ref": "ChatbotAPIChatInvocationsCounterFunctionServiceRoleBAAE7C12"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/ChatInvocationsCounterFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIChatInvocationsCounterFunction0AD6F7D4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "c3e92f5466c1e85439505a74276737556db99da361917bd3d470af7e3ccbcbc5.zip"
    },
    "Environment": {
     "Variables": {
      "CHAT_FUNCTION_NAME": {
       "Ref": "ChatbotAPIChatHandlerFunctionEB04457E"
      }
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPIChatInvocationsCounterFunctionServiceRoleBAAE7C12",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 30
   },
   "DependsOn": [
    "ChatbotAPIChatInvocationsCounterFunctionServiceRoleDefaultPolicy4112833F",
    "ChatbotAPIChatInvocationsCounterFunctionServiceRoleBAAE7C12"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/ChatInvocationsCounterFunction/Resource",
    "aws:asset:path": "asset.c3e92f5466c1e85439505a74276737556db99da361917bd3d470af7e3ccbcbc5",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ChatbotAPIcomprehendMedicalFunctionServiceRole20B51B48": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/comprehendMedicalFunction/ServiceRole/Resource"
   }
  },
  "ChatbotAPIcomprehendMedicalFunctionServiceRoleDefaultPolicy1EA9424D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "comprehend:DetectPiiEntities",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChatbotAPIcomprehendMedicalFunctionServiceRoleDefaultPolicy1EA9424D",
    "Roles": [
     {
      "Ref": "ChatbotAPIcomprehendMedicalFunctionServiceRole20B51B48"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/comprehendMedicalFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ChatbotAPIcomprehendMedicalFunction7DBD41DD": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "d23f41008f65e62ec1dd1baed95d1e65e1911af92fb185e51a10468eb8db35a8.zip"
    },
    "Handler": "lambda_function.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "ChatbotAPIcomprehendMedicalFunctionServiceRole20B51B48",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 60
   },
   "DependsOn": [
    "ChatbotAPIcomprehendMedicalFunctionServiceRoleDefaultPolicy1EA9424D",
    "ChatbotAPIcomprehendMedicalFunctionServiceRole20B51B48"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/ChatbotAPI/comprehendMedicalFunction/Resource",
    "aws:asset:path": "asset.d23f41008f65e62ec1dd1baed95d1e65e1911af92fb185e51a10468eb8db35a8",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "2eb6a831b107939f63cfebf68e6316e1a40f79fc99cae0fee9b333bac8d29bc4.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "ChatbotAPIKendraSourceBucket8BA49C97"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.2eb6a831b107939f63cfebf68e6316e1a40f79fc99cae0fee9b333bac8d29bc4",
    "aws:asset:property": "Code"
   }
  },
  "UserInterfaceWebsiteLogsBucket54728780": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/UserInterface/WebsiteLogsBucket/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Bucket is the server access logs bucket for websiteBucket.",
       "id": "AwsSolutions-S1"
      }
     ]
    }
   }
  },
  "UserInterfaceWebsiteLogsBucketPolicyB99816BB": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "UserInterfaceWebsiteLogsBucket54728780"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "UserInterfaceWebsiteLogsBucket54728780",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UserInterfaceWebsiteLogsBucket54728780",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "UserInterfaceWebsiteLogsBucket54728780",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UserInterfaceWebsiteLogsBucket54728780",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:PutObject",
       "Condition": {
        "ArnLike": {
         "aws:SourceArn": {
          "Fn::GetAtt": [
           "UserInterfaceWebsiteBucket2BDEA247",
           "Arn"
          ]
         }
        },
        "StringEquals": {
         "aws:SourceAccount": {
          "Ref": "AWS::AccountId"
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "logging.s3.amazonaws.com"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "UserInterfaceWebsiteLogsBucket54728780",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/UserInterface/WebsiteLogsBucket/Policy/Resource"
   }
  },
  "UserInterfaceWebsiteLogsBucketAutoDeleteObjectsCustomResourceA75855B8": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "UserInterfaceWebsiteLogsBucket54728780"
    }
   },
   "DependsOn": [
    "UserInterfaceWebsiteLogsBucketPolicyB99816BB"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/UserInterface/WebsiteLogsBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "UserInterfaceWebsiteBucket2BDEA247": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "LoggingConfiguration": {
     "DestinationBucketName": {
      "Ref": "UserInterfaceWebsiteLogsBucket54728780"
     }
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:37573ce7",
      "Value": "true"
     }
    ],
    "WebsiteConfiguration": {
     "ErrorDocument": "index.html",
     "IndexDocument": "index.html"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/UserInterface/WebsiteBucket/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "OAI is configured for read.",
       "id": "AwsSolutions-S5"
      }
     ]
    }
   }
  },
  "UserInterfaceWebsiteBucketPolicyEE27C04B": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "UserInterfaceWebsiteBucket2BDEA247"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "UserInterfaceWebsiteBucket2BDEA247",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UserInterfaceWebsiteBucket2BDEA247",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "UserInterfaceWebsiteBucket2BDEA247",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UserInterfaceWebsiteBucket2BDEA247",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "UserInterfaceWebsiteS3OAI283F6647",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "UserInterfaceWebsiteBucket2BDEA247",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UserInterfaceWebsiteBucket2BDEA247",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "UserInterfaceWebsiteS3OAI283F6647",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "UserInterfaceWebsiteBucket2BDEA247",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/UserInterface/WebsiteBucket/Policy/Resource"
   }
  },
  "UserInterfaceWebsiteBucketAutoDeleteObjectsCustomResourceD0AC653B": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "UserInterfaceWebsiteBucket2BDEA247"
    }
   },
   "DependsOn": [
    "UserInterfaceWebsiteBucketPolicyEE27C04B"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/UserInterface/WebsiteBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "UserInterfaceWebsiteS3OAI283F6647": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Allows CloudFront to reach the bucket"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/UserInterface/Website/S3OAI/Resource"
   }
  },
  "UserInterfaceWebsiteDistributionLogsBucket932D61CF": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "OwnershipControls": {
     "Rules": [
      {
       "ObjectOwnership": "ObjectWriter"
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/UserInterface/Website/DistributionLogsBucket/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Bucket is the server access logs bucket for websiteBucket.",
       "id": "AwsSolutions-S1"
      }
     ]
    }
   }
  },
  "UserInterfaceWebsiteDistributionLogsBucketPolicyD3DF8844": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "UserInterfaceWebsiteDistributionLogsBucket932D61CF"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "UserInterfaceWebsiteDistributionLogsBucket932D61CF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UserInterfaceWebsiteDistributionLogsBucket932D61CF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "UserInterfaceWebsiteDistributionLogsBucket932D61CF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UserInterfaceWebsiteDistributionLogsBucket932D61CF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/UserInterface/Website/DistributionLogsBucket/Policy/Resource"
   }
  },
  "UserInterfaceWebsiteDistributionLogsBucketAutoDeleteObjectsCustomResourceCBBE4A16": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "UserInterfaceWebsiteDistributionLogsBucket932D61CF"
    }
   },
   "DependsOn": [
    "UserInterfaceWebsiteDistributionLogsBucketPolicyD3DF8844"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/UserInterface/Website/DistributionLogsBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "UserInterfaceWebsiteDistributionCFDistributionBCE5BC0C": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "CacheBehaviors": [
      {
       "AllowedMethods": [
        "DELETE",
        "GET",
        "HEAD",
        "OPTIONS",
        "PATCH",
        "POST",
        "PUT"
       ],
       "CachedMethods": [
        "GET",
        "HEAD"
       ],
       "Compress": true,
       "DefaultTTL": 0,
       "ForwardedValues": {
        "Headers": [
         "Referer",
         "Origin",
         "Authorization",
         "Content-Type",
         "x-forwarded-user",
         "Access-Control-Request-Headers",
         "Access-Control-Request-Method"
        ],
        "QueryString": true
       },
       "PathPattern": "/chatbot/files/*",
       "TargetOriginId": "origin2",
       "ViewerProtocolPolicy": "redirect-to-https"
      }
     ],
     "CustomErrorResponses": [
      {
       "ErrorCachingMinTTL": 0,
       "ErrorCode": 404,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      }
     ],
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD"
      ],
      "CachedMethods": [
       "GET",
       "HEAD"
      ],
      "Compress": true,
      "ForwardedValues": {
       "Cookies": {
        "Forward": "none"
       },
       "QueryString": false
      },
      "TargetOriginId": "origin1",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2and3",
     "IPV6Enabled": true,
     "Logging": {
      "Bucket": {
       "Fn::GetAtt": [
        "UserInterfaceWebsiteDistributionLogsBucket932D61CF",
        "RegionalDomainName"
       ]
      },
      "IncludeCookies": false
     },
     "Origins": [
      {
       "ConnectionAttempts": 3,
       "ConnectionTimeout": 10,
       "DomainName": {
        "Fn::GetAtt": [
         "UserInterfaceWebsiteBucket2BDEA247",
         "RegionalDomainName"
        ]
       },
       "Id": "origin1",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "UserInterfaceWebsiteS3OAI283F6647"
           }
          ]
         ]
        }
       }
      },
      {
       "ConnectionAttempts": 3,
       "ConnectionTimeout": 10,
       "DomainName": {
        "Fn::GetAtt": [
         "UserInterfaceWebsiteBucket2BDEA247",
         "RegionalDomainName"
        ]
       },
       "Id": "origin2",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "UserInterfaceWebsiteS3OAI283F6647"
           }
          ]
         ]
        }
       }
      }
     ],
     "PriceClass": "PriceClass_All",
     "ViewerCertificate": {
      "CloudFrontDefaultCertificate": true
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/UserInterface/Website/Distribution/CFDistribution",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "No geo restrictions",
       "id": "AwsSolutions-CFR1"
      },
      {
       "reason": "WAF not required due to configured Cognito auth.",
       "id": "AwsSolutions-CFR2"
      },
      {
       "reason": "TLS 1.2 is the default.",
       "id": "AwsSolutions-CFR4"
      }
     ]
    }
   }
  },
  "UserInterfaceUserInterfaceDeploymentAwsCliLayerDB546DB8": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "50710f95ac0df787407995321118cf4e34dc8e8c2825137ce9775494c5c3cca3.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/UserInterface/UserInterfaceDeployment/AwsCliLayer/Resource",
    "aws:asset:path": "asset.50710f95ac0df787407995321118cf4e34dc8e8c2825137ce9775494c5c3cca3.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "UserInterfaceUserInterfaceDeploymentCustomResource05D90D2B": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     }
    ],
    "SourceObjectKeys": [
     "33db9a1fd898888c4825279599c5c4de4561c504ddafdf5d61ff06c0bbf0e7ca.zip",
     "76169626222155c41a81dbcd8a3565ccf9d50314328bcadc93ec43e5fc109843.zip"
    ],
    "SourceMarkers": [
     {},
     {
      "<<marker:0xbaba:0>>": {
       "Ref": "AWS::Region"
      },
      "<<marker:0xbaba:1>>": {
       "Ref": "AuthorizationUserPool114F25B4"
      },
      "<<marker:0xbaba:2>>": {
       "Ref": "AuthorizationUserPoolClient8E2989BE"
      },
      "<<marker:0xbaba:3>>": {
       "Fn::GetAtt": [
        "UserInterfaceWebsiteDistributionCFDistributionBCE5BC0C",
        "DomainName"
       ]
      },
      "<<marker:0xbaba:4>>": {
       "Fn::GetAtt": [
        "UserInterfaceWebsiteDistributionCFDistributionBCE5BC0C",
        "DomainName"
       ]
      },
      "<<marker:0xbaba:5>>": {
       "Ref": "ChatbotAPIRestBackendHTTPAPI6A6C7FF4"
      },
      "<<marker:0xbaba:6>>": {
       "Ref": "AWS::Region"
      },
      "<<marker:0xbaba:7>>": {
       "Ref": "AWS::URLSuffix"
      },
      "<<marker:0xbaba:8>>": {
       "Ref": "ChatbotAPIWebsocketBackendWSAPI75718B83"
      },
      "<<marker:0xbaba:9>>": {
       "Ref": "AWS::Region"
      },
      "<<marker:0xbaba:10>>": {
       "Ref": "AWS::URLSuffix"
      }
     }
    ],
    "DestinationBucketName": {
     "Ref": "UserInterfaceWebsiteBucket2BDEA247"
    },
    "Prune": false,
    "DistributionId": {
     "Ref": "UserInterfaceWebsiteDistributionCFDistributionBCE5BC0C"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/UserInterface/UserInterfaceDeployment/CustomResource/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "UserInterfaceWebsiteBucket2BDEA247",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UserInterfaceWebsiteBucket2BDEA247",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cloudfront:CreateInvalidation",
        "cloudfront:GetInvalidation"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "UserInterfaceUserInterfaceDeploymentAwsCliLayerDB546DB8"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ],
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
    "aws:asset:path": "asset.2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21TwW7bMAz9lt4VLc122DV1UCxAiwbxth4DWmZc1rZkSHQyT/C/D5Iaxyty4nvkE2U+yit5/20pl3dwdgtV1ouGCulzBlULOLuDV6bSxEb6Xw7tzphGZEd9C29MC6TFhWYNoea5IGVGQdBKvzcNhmKMO9OQGgJNaBQNtEUJ0j/2WjEZHWpzvEPbknOBbYyq0W5bqHCueIIB7W+0UZOTrhpkM/UYhft68OAcspPrEESJXWOGFjXLh17VyJspEdTSp+wDOBQJhms+UArXOeZ8FOWgoTVlIf1PKNLcEYyiRl1akD476q0u8U8obYAhN71VOAroqALGMwynlfQ/mLt1R0EUQqA5QxUbJhBSe9NzQlvNWFm4WPKJXnXrnt+Mpb9oY+sre8UiD/ZyuG4i6eBE522vB240iZ84ClT28OH8bHdpCais3GNnHLGxQ/TaMXbHj7W5A4OrnXyKz2OrT6b+JJD+GTqRMzA+g3ojfTFn4qNQjenLozWapX+xVJFeK4XObUvUTBwXmAXNY9DcVkzlVyw25NhS0V+MnfNxFHt0cZsijhhMIF0F3UvPXc8i6x2bdlKFzUz4v9LOmhOVaKMt6Q85NOGZH+DsVENyfXZZQ/HlxxmMLim9dm1KlO/uy2m1lPff5fLu3REtbK+ZWpT7FP8BpK3BNwsEAAA="
   },
   "Metadata": {
    "aws:cdk:path": "ITOPSRAGStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "AuthorizationUserPoolIDA8611C6E": {
   "Value": {
    "Ref": "AuthorizationUserPool114F25B4"
   }
  },
  "AuthorizationUserPoolClientIDC710EFA7": {
   "Value": {
    "Ref": "AuthorizationUserPoolClient8E2989BE"
   }
  },
  "ChatbotAPIWSAPIapiEndpoint565B66F1": {
   "Value": {
    "Fn::GetAtt": [
     "ChatbotAPIWebsocketBackendWSAPI75718B83",
     "ApiEndpoint"
    ]
   }
  },
  "ChatbotAPIHTTPAPIapiEndpoint8290A8FE": {
   "Value": {
    "Fn::GetAtt": [
     "ChatbotAPIRestBackendHTTPAPI6A6C7FF4",
     "ApiEndpoint"
    ]
   }
  },
  "UserInterfaceWebsiteUserInterfaceDomainNameE43D2FB1": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Fn::GetAtt": [
        "UserInterfaceWebsiteDistributionCFDistributionBCE5BC0C",
        "DomainName"
       ]
      }
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}